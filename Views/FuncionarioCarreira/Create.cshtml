@model FuncionarioEditViewModel

@{
    ViewBag.Title = "Carreira do Funcion√°rio";
}

<div class="container-fluid">
    <div class="row">
        <div class="card col-md-12">
            <div class="pd-15">
                <h1 class="title">@ViewBag.Title</h1>
                <hr />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()


                    <div class="form-row">
                        @Html.LabelFor(model => model.IdentificadorFuncionarioCarreira, htmlAttributes: new { @class = "control-label col-md-2 text-info" })
                        @Html.EditorFor(model => model.IdentificadorFuncionarioCarreira, new { htmlAttributes = new { @class = "col-md-4 mb-4", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.IdentificadorFuncionarioCarreira, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-row ">
                        @Html.LabelFor(model => model.NomeFuncionario, htmlAttributes: new { @class = "control-label col-md-2 text-info" })
                        @Html.EditorFor(model => model.NomeFuncionario, new { htmlAttributes = new { @class = "col-md-4 mb-4", @autofocus = "autofocus" } })
                        @Html.ValidationMessageFor(model => model.NomeFuncionario, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-row">
                        @Html.LabelFor(x => Model.SelectedCarreiraIso5, htmlAttributes: new { @class = "control-label col-md-2 text-info" })
                        @Html.DropDownListFor(x => Model.SelectedCarreiraIso5, new SelectList(Model.Carreiras, "Value", "Text"), htmlAttributes: new { @class = "col-md-4 mb-4", id = "Carreira" })
                        @Html.ValidationMessageFor(x => x.SelectedCarreiraIso5, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-row">
                        @Html.LabelFor(x => Model.SelectedProgressaoCode, htmlAttributes: new { @class = "control-label col-md-2 text-info" })
                        @Html.DropDownListFor(x => Model.SelectedProgressaoCode, new SelectList(Model.Progressoes, "Value", "Text"), htmlAttributes: new { @class = "col-md-4 mb-4", @id = "Progressao" })
                        @Html.ValidationMessageFor(x => x.SelectedProgressaoCode, "", new { @class = "text-danger" })
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Criar Carreira" class="btn btn-primary" />
                        @await Component.InvokeAsync("FuncionarioCarreiraMenu")
                    </div>
                </div>

                }
                <div>
                    <h2><strong class="text-info">@ViewBag.UserMessage</strong></h2>
                </div>
            </div>
            <div class="pd-15">
                
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
          $('#Carreira').change(function () {
                var selectedCarreira = $("#Carreira").val();
                var selectedProgressao = $('#Progressao');
                selectedProgressao.empty();
                if (selectedCarreira != null && selectedCarreira != '') {
                    $.getJSON('@Url.Action("GetProgressoes")', { iso5: selectedCarreira }, function (progressoes) {
                        if (progressoes != null && !jQuery.isEmptyObject(progressoes))
                        {
                            console.log(progressoes[0].text);
                            selectedProgressao.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(progressoes, function (index, p) {
                                console.log(p)
                                selectedProgressao.append($('<option/>', {
                                    value: p.value,
                                    text: p.text
                                }));
                            });
                        };
                    });
                }
            });
    </script>
}