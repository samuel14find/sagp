@inject SignInManager<gestao.Data.Entities.ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
@*<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
    }
    
    <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)"><a asp-page="./PersonalData">Personal data</a></li>
</ul>*@

<ul class="list-group list-group-flush">
    <li class="@ManageNavPages.IndexNavClass(ViewContext) list-group-item"><a class="text-dark" asp-page="./Index">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext) list-group-item"><a class="text-dark" id="change-password" asp-page="./ChangePassword">Senha</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext) list-group-item"><a class="text-dark" id="external-login" asp-page="./ExternalLogins">Login Externo</a></li>
    }
    <li class="@ManageNavPages.PersonalDataNavClass(ViewContext) list-group-item"><a class="text-dark" asp-page="./PersonalData">Deletar Conta</a></li>
</ul>